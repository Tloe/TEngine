#include <TEInputMap.h>
#include <windows.h>

TE::Context::InputMap::InputMap()
{
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(0,tekInputKey0));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(1,tekInputKey1));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(2,tekInputKey2));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(3,tekInputKey3));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(4,tekInputKey4));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(5,tekInputKey5));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(6,tekInputKey6));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(7,tekInputKey7));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(8,tekInputKey8));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(9,tekInputKey9));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('A',tekInputKeyA));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('B',tekInputKeyB));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('C',tekInputKeyC));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('D',tekInputKeyD));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('E',tekInputKeyE));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('F',tekInputKeyF));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('G',tekInputKeyG));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('H',tekInputKeyH));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('I',tekInputKeyI));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('J',tekInputKeyJ));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('K',tekInputKeyK));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('L',tekInputKeyL));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('M',tekInputKeyM));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('N',tekInputKeyN));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('O',tekInputKeyO));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('P',tekInputKeyP));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('Q',tekInputKeyQ));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('R',tekInputKeyR));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('S',tekInputKeyS));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('T',tekInputKeyT));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('U',tekInputKeyU));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('V',tekInputKeyV));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('W',tekInputKeyW));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('X',tekInputKeyX));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('Y',tekInputKeyY));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type('Z',tekInputKeyZ));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F1,tekInputKeyF1));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F2,tekInputKeyF2));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F3,tekInputKeyF3));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F4,tekInputKeyF4));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F5,tekInputKeyF5));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F6,tekInputKeyF6));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F7,tekInputKeyF7));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F8,tekInputKeyF8));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F9,tekInputKeyF9));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F10,tekInputKeyF10));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F11,tekInputKeyF11));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_F12,tekInputKeyF12));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_CONTROL,tekInputKeyControlLeft));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_MENU,tekInputKeyAltLeft));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_SHIFT,tekInputKeyShiftLeft));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_SPACE,tekInputKeySpace));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_RETURN,tekInputKeyEnter));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_ESCAPE,tekInputKeyEscape));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_BACK,tekInputKeyBackspace));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_TAB,tekInputKeyTab));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_SEPARATOR,tekInputKeySeperator));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_CAPITAL,tekInputKeyCapslock));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_UP,tekInputKeyUp));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_DOWN,tekInputKeyDown));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_LEFT,tekInputKeyLeft));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_RIGHT,tekInputKeyRight));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_PRIOR,tekInputKeyPgUp));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NEXT,tekInputKeyPgDown));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_HOME,tekInputKeyHome));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_END,tekInputKeyEnd));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD0,tekInputKeyNum0));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD1,tekInputKeyNum1));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD2,tekInputKeyNum2));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD3,tekInputKeyNum3));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD4,tekInputKeyNum4));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD5,tekInputKeyNum5));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD6,tekInputKeyNum6));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD7,tekInputKeyNum7));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD8,tekInputKeyNum8));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_NUMPAD9,tekInputKeyNum9));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_1,tekInputKeyCollon));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_PLUS,tekInputKeyPlus));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_COMMA,tekInputKeyComma));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_MINUS,tekInputKeyMinus));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_PERIOD,tekInputKeyPeriod));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_2,tekInputKeySlashQuest));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_OEM_3,tekInputKeyTilde));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_LBUTTON,tekInputLMouse));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_MBUTTON,tekInputMMouse));
	m_VKTEMap.insert(std::map<int, TEInput>::value_type(VK_RBUTTON,tekInputRMouse));

	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey0,0));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey1,1));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey2,2));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey3,3));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey4,4));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey5,5));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey6,6));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey7,7));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey8,8));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKey9,9));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyA,'A'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyB,'B'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyC,'C'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyD,'D'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyE,'E'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF,'F'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyG,'G'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyH,'H'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyI,'I'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyJ,'J'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyK,'K'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyL,'L'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyM,'M'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyN,'N'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyO,'O'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyP,'P'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyQ,'Q'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyR,'R'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyS,'S'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyT,'T'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyU,'U'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyV,'V'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyW,'W'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyX,'X'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyY,'Y'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyZ,'Z'));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF1,VK_F1));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF2,VK_F2));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF3,VK_F3));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF4,VK_F4));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF5,VK_F5));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF6,VK_F6));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF7,VK_F7));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF8,VK_F8));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF9,VK_F9));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF10,VK_F10));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF11,VK_F11));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyF12,VK_F12));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyControlLeft,VK_CONTROL));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyAltLeft,VK_MENU));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyShiftLeft,VK_SHIFT));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeySpace,VK_SPACE));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyEnter,VK_RETURN));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyEscape,VK_ESCAPE));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyBackspace,VK_BACK));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyTab,VK_TAB));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeySeperator,VK_SEPARATOR));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyCapslock,VK_CAPITAL));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyUp,VK_UP));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyDown,VK_DOWN));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyLeft,VK_LEFT));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyRight,VK_RIGHT));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyPgUp,VK_PRIOR));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyPgDown,VK_NEXT));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyHome,VK_HOME));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyEnd,VK_END));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum0,VK_NUMPAD0));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum1,VK_NUMPAD1));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum2,VK_NUMPAD2));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum3,VK_NUMPAD3));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum4,VK_NUMPAD4));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum5,VK_NUMPAD5));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum6,VK_NUMPAD6));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum7,VK_NUMPAD7));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum8,VK_NUMPAD8));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyNum9,VK_NUMPAD9));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyCollon,VK_OEM_1));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyPlus,VK_OEM_PLUS));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyComma,VK_OEM_COMMA));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyMinus,VK_OEM_MINUS));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyPeriod,VK_OEM_PERIOD));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeySlashQuest,VK_OEM_2));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputKeyTilde,VK_OEM_3));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputLMouse,VK_LBUTTON));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputMMouse,VK_MBUTTON));
	m_TEVKMap.insert(std::map<TEInput, int>::value_type(tekInputRMouse,VK_RBUTTON));
}